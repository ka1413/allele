plot(2004:2013,0:200,typ='n')
smokers  <- c( 83, 90, 129, 70 )
patients <- c( 86, 93, 136, 82 )
prop.test(smokers, patients)
quine
head(quine)
library(MASS)
head(quine)
quine
table(quine$Eth, quine$Sex)
`tabulated_data.(online.version)` <- read.csv("E:/My Documents/Academics/UPDiliman/4th Year 2nd Sem/CS 197/Project/student_throughput/tabulated_data (online version).csv")
View(`tabulated_data.(online.version)`)
sample1 <- table(tabulated_data.(online.version))
sample1 <- table("tabulated_data.(online.version)")
sample1
data.table(tabulated_data.(online.version)
)
class(tabulated_data.(online.version))
class("tabulated_data.(online.version)")
typeof("tabulated_data.(online.version)")
str("tabulated_data.(online.version)")
str(tabulated_data.(online.version))
View(`tabulated_data.(online.version)`)
class(`tabulated_data.(online.version)`)
str(`tabulated_data.(online.version)`)
table(`tabulated_data.(online.version)`)
show(`tabulated_data.(online.version)`)
sample1 <- table(`tabulated_data.(online.version)`)
sample1 <- as.matrix(`tabulated_data.(online.version)`)
sample1
View(sample1)
sample1$BS.ME.Input
sample1["BS.ME.Input",]
sample1[,"BS.ME.Input"]
sample1[,"BS.ME.Input"]''
sample1[,"BS.ME.Input"]'
;
''
t(sample1[,"BS.ME.Input"])
table(sample1)
sample2 <-table(sample1)
sample2 <- table(sample1)
sample2
table(sample1[,"BS.CS.Input"])
show(sample1[,"BS.CS.Input"])
show(sample1[,"BS.CS.Input":"BS.CS.Output"])
show(sample1[,"BS.CS.Input"-"BS.CS.Output"])
show(sample1[,"BS.CS.Input:BS.CS.Output"])
show(sample1[,"BS.CS.Input":"BS.CS.Output"])
show(sample1[,1:2])
show(sample1[,2:3])
prop.test(sample1[,2:3])
prop.test(sample1[,2:3], alternative="LESS")
prop.test(sample1[,2:3], alternative="less")
prop.test(sample1[,2:3], alternative=less)
show(sample1[,2:3])
table(sample[,2:3], sample[,4:5])
table(sample[,2:3])
table(sample1[,2:3], sample1[,4:5])
prop.test(sample1[,2:3], sample1[,4:5])
prop.test(table(sample1[,2:3], sample1[,4:5])
)
setwd("E:\Downloads\")
setwd("E:\\Downloads\")
;
\
quit
;
..
/
# the parameter of the function is the data.frame to be used
variable_selection_regression <- function(sample){
# sample <- read.csv(filename, row.names=1);
# assuming the 1st row is for the dependent variable
m <- lm(as.formula(paste(colnames(sample)[1], "~.", collapse="")), sample);
while(varWithHighestP(m) != "Stop Right Here"){
m <- update(m, as.formula(paste(".~.-", varWithHighestP(m), collapse="")));
}
return(m);
}
varWithHighestP <- function(data){
a <- anova(data);
p <- 0;
index <- 0;
for(i in 1:(nrow(a)-1)){
if(a[i,5] > 0.05){
if(a[i,5] > p){
p <- a[i,5];
index <- i;
}
}
}
if(index > 0){
str <- rownames(a)[index];
} else {
str <- "Stop Right Here";
}
return(str);
}
data(state)
statedata <- data.frame(state.x77,row.names=state.abb,check.names=T)
head(statedata)
statedata[c("Life.Exp")]
statedata[c("Life.Exp", .)]
statedata
head(statedata)
statedata[c("Life.Exp", "Population", "Income", "Illiteracy", "Murder", "HS.Grad", "Frost", "Area")]
sample<-statedata[c("Life.Exp", "Population", "Income", "Illiteracy", "Murder", "HS.Grad", "Frost", "Area")]
head(sample)
variable_selection_regression(sample)
m<-variable_selection_regression(sample)
anova(m)
n <- lm(Life.Exp~., sample)
n
anova(n)
m
n <- lm(Life.Exp~.-Area, sample)
anova(n)
n <- lm(Life.Exp~.-Area-Population, sample)
n
anova(n)
m
summary(m)
anova(m)
library(Rcmdr)
scatter3d(year~education+vocabulary|sex, data=Vocab, fit="linear",
residuals=TRUE, parallel=FALSE, bg="white", axis.scales=TRUE, grid=TRUE,
ellipsoid=FALSE)
library(FactoMineR)
library(Rcmdr)
res.pca <- PCA(m, scale.unit=TRUE, ncp=5, quali.sup=c(65:70), graph=T);
res.pca <- PCA(m, scale.unit=TRUE, ncp=5, quali.sup=c(65:70), graph=T);
setwd("E:/Eclipse Projects/Trna Free Energy Neural Network/pca");
library(FactoMineR)
m <- read.csv("pca_species_acodon.csv", row.names=1);
res.pca <- PCA(m, scale.unit=TRUE, ncp=5, quali.sup=c(65:70), graph=T);
res.pca
res.pca$eig
res.pca$ind$coord
res.pca$ind$coord$Dim.1
res.pca$ind$coord[1]
res.pca$ind$coord[,1]
res.pca$ind$coord[1,1]
res.pca$ind$coord[,0]
res.pca$ind$coord[,2]
library(hexbin)
install.packages("hexbin")
x <- res.pca$ind$coord[,1]
y <- res.pca$ind$coord[,2]
plot(x,y)
plot(x,y)
library(scatterplot3d)
z <- res.pca$ind$coord[,3]
scatterplot3d(x,y,z)
scatterplot3d(x, y, z, color="blue", pch=19, type="h");
res.pca
res.pca$var
res.pca
res.pca$var$contrib
res.pca$ind$contrib
n <- read.csv("pca_species_aacid.csv", row.names=1);
res.pca <- PCA(n, scale.unit=TRUE, ncp=5, quali.sup=c(22:27), graph=T);
plotellipses(res.pca);
plotellipses(res.pca);
plot.PCA(res.pca, axes=c(1, 2), choix="ind", habillage=22);
res.pca <- PCA(n, scale.unit=TRUE, ncp=5, quali.sup=c(22:27), graph=T);
